{"version":3,"sources":["scripts/Communication.ts","component/Settings.tsx","component/Clicker.tsx","component/App.tsx","reportWebVitals.ts","index.tsx"],"names":["ip","n","GETCount","fetch","then","response","json","data","count","POSTCount","method","headers","conetent","body","JSON","stringify","upd","SettingsTab","state","text","handleSetCount","console","log","handleSetIP","event","this","setState","value","target","id","className","Refresh","fontSize","onChange","handleChange","onClick","Component","Clicker","settingsShown","toggleSettings","handleButtonPress","setInterval","Settings","ArrowUpward","ArrowDownward","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kUAAIA,G,YAAK,uBACLC,EAAI,EAMR,SAASC,IAIL,OAHAC,MAAM,WAAaH,EAAK,WAAY,IAC/BI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIN,EAAIM,EAAKC,SACpBP,EAGX,SAASQ,EAAUR,GACfE,MAAM,WAAaH,EAAK,kBAAmB,CACvCU,OAAQ,OACRC,QAAS,CAAEC,SAAU,oBACrBC,KAAMC,KAAKC,UAAU,CAAEC,IAAKf,M,WCyBrBgB,E,4MAlCXC,MAAQ,CACJC,KAAM,I,EAOVC,eAAiB,WACbC,QAAQC,IAAI,EAAKJ,MAAMC,O,EAG3BI,YAAc,a,kDARd,SAAaC,GACTC,KAAKC,SAAS,CAAEC,MAAOH,EAAMI,OAAOD,U,oBAWxC,WAAU,IAAD,OACL,OACI,8BACI,sBAAKE,GAAG,WAAWC,UAAU,aAA7B,UACI,wBAAQD,GAAG,MAAX,SAAiB,cAACE,EAAA,EAAD,CAASC,SAAS,aACnC,uBAAOL,MAAOF,KAAKP,MAAMC,KAAMc,SAAUR,KAAKS,eAC9C,wBAAQC,QAAS,kBAAM,EAAKf,kBAAkBS,GAAG,YAAjD,SACI,4CAEJ,wBAAQM,QAAS,kBAAM,EAAKZ,aAAaM,GAAG,SAA5C,SACI,kD,GA5BEO,aC4CXC,G,kNA1CXnB,MAAQ,CACJV,MAAO,EACP8B,eAAe,G,EASnBC,eAAiB,WACb,EAAKb,SAAS,CAAEY,eAAgB,EAAKpB,MAAMoB,iB,EAG/CE,kBAAoB,SAACvC,GACjBQ,EAAUR,GACV,EAAKyB,SAAS,CAAElB,MAAON,O,uDAZ3B,WAAqB,IAAD,OAChBuC,aACI,kBAAM,EAAKf,SAAS,CAAElB,MAAON,QAAe,O,oBAapD,WAAU,IAAD,OACL,OACI,sBAAK2B,GAAG,UAAR,UACI,sBAAKC,UAAU,WAAf,UACI,sBAAKD,GAAG,gBAAgBC,UAAU,aAAlC,UACI,qBAAKD,GAAG,QAAR,SAAiBJ,KAAKP,MAAMV,QAC5B,wBAAQqB,GAAG,gBAAgBM,QAASV,KAAKc,eAAzC,SAAyD,cAACG,EAAA,EAAD,CAAUV,SAAS,iBAG/EP,KAAKP,MAAMoB,eAAiB,cAAC,EAAD,OAGjC,sBAAKT,GAAG,mBAAmBC,UAAU,WAArC,UACI,wBAAQD,GAAG,MAAMM,QAAS,kBAAM,EAAKK,kBAAkB,IAAvD,SAA2D,cAACG,EAAA,EAAD,CAAaX,SAAS,YACjF,wBAAQH,GAAG,MAAMM,QAAS,kBAAM,EAAKK,mBAAmB,IAAxD,SAA4D,cAACI,EAAA,EAAD,CAAeZ,SAAS,sB,GAnClFI,c,MCKPS,MARf,WACE,OACE,qBAAKhB,GAAG,OAAR,SACE,cAAC,EAAD,OCMSiB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4e66af50.chunk.js","sourcesContent":["let ip = \"85.230.176.103:9001\";\nlet n = 0;\n\nfunction setIP(newIP: string) {\n    ip = newIP;\n}\n\nfunction GETCount(): number {\n    fetch(\"https://\" + ip + \"/counter\", {})\n        .then(response => response.json())\n        .then(data => n = data.count);\n    return n;\n}\n\nfunction POSTCount(n: number) {\n    fetch(\"https://\" + ip + \"/counter/update\", {\n        method: 'POST',\n        headers: { conetent: \"application/json\" },\n        body: JSON.stringify({ upd: n })\n    });\n}\n\nfunction PUTCount(n: number) {\n    fetch(\"https://\" + ip + \"/counter/reset\", {\n        method: 'PUT',\n        headers: { conetent: \"application/json\" },\n        body: JSON.stringify({ val: n })\n    });\n}\n\nexport { GETCount, POSTCount, PUTCount, setIP }","import { Refresh } from '@material-ui/icons';\n\nimport '../style/Style.css';\nimport '../style/Settings.css';\nimport '../scripts/Communication.ts'\nimport { Component } from 'react';\n\nclass SettingsTab extends Component {\n\n    state = {\n        text: \"\",\n    };\n\n    handleChange(event: any) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSetCount = () => {\n        console.log(this.state.text);\n    }\n\n    handleSetIP = () => {\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div id=\"settings\" className=\"horizontal\">\n                    <button id=\"upd\"><Refresh fontSize=\"medium\" /></button>\n                    <input value={this.state.text} onChange={this.handleChange} />\n                    <button onClick={() => this.handleSetCount()} id=\"set-count\">\n                        <b>SET COUNT</b>\n                    </button>\n                    <button onClick={() => this.handleSetIP} id=\"set-ip\">\n                        <b>SET IP</b>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SettingsTab;","import { Component } from 'react'\nimport { ArrowDownward, ArrowUpward, Settings } from '@material-ui/icons';\nimport SettingsTab from './Settings';\nimport '../style/Style.css';\nimport '../style/Clicker.css';\nimport '../scripts/Communication.ts'\nimport { GETCount, POSTCount } from '../scripts/Communication';\n\nclass Clicker extends Component {\n    state = {\n        count: 0,\n        settingsShown: false,\n    }\n\n    componentDidMount() {\n        setInterval(\n            () => this.setState({ count: GETCount() }), 1000\n        );\n    }\n\n    toggleSettings = () => {\n        this.setState({ settingsShown: !this.state.settingsShown });\n    }\n\n    handleButtonPress = (n: number) => {\n        POSTCount(n);\n        this.setState({ count: GETCount() })\n    }\n\n    render() {\n        return (\n            <div id=\"clicker\">\n                <div className=\"vertical\">\n                    <div id=\"top-container\" className=\"horizontal\">\n                        <div id=\"count\">{this.state.count}</div>\n                        <button id=\"settings-icon\" onClick={this.toggleSettings}><Settings fontSize=\"inherit\" /></button>\n                    </div>\n\n                    {this.state.settingsShown && <SettingsTab />}\n                </div>\n\n                <div id=\"button-container\" className=\"vertical\">\n                    <button id=\"inc\" onClick={() => this.handleButtonPress(1)}><ArrowUpward fontSize=\"large\" /></button>\n                    <button id=\"dec\" onClick={() => this.handleButtonPress(-1)}><ArrowDownward fontSize=\"large\" /></button>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Clicker","import React from 'react';\nimport '../style/App.css';\nimport Clicker from './Clicker';\nimport '@fontsource/roboto';\n\nfunction App() {\n  return (\n    <div id=\"main\">\n      <Clicker />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './component/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}